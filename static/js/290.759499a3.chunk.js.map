{"version":3,"file":"static/js/290.759499a3.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 21px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  // Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  // MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          {icon && (\r\n            <Col lg={11} md={11} sm={12} xs={24}>\r\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n            </Col>\r\n          )}\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              {Array.isArray(content) ? (\r\n                content.map((item, index) => (\r\n                  <MinPara key={index}>{t(item)}</MinPara>\r\n                ))\r\n              ) : (\r\n                <MinPara>{t(content)}</MinPara>\r\n              )}\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string | string[] ;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              {/* {item.icon && (\r\n                                <SvgIcon\r\n                                  src={item.icon}\r\n                                  width=\"60px\"\r\n                                  height=\"60px\"\r\n                                />\r\n                              )} */}\r\n                              {/* <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara> */}\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","StyledRow","_templateObject2","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinPara","_templateObject6","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","t","id","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","Array","isArray","map","item","index","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","span"],"sourceRoot":""}